rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Función helper para verificar si es admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'ludociel.dev@gmail.com';
    }

    // Función helper para verificar si está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Función helper para verificar si es el dueño
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // === PRODUCTOS ===
    match /productos/{productId} {
      // Todos pueden leer productos
      allow read: if true;
      // Solo admins pueden crear/actualizar/eliminar
      allow write: if isAdmin();
    }

    // === PERSONALIZACIONES ===
    match /personalizaciones/{customizationId} {
      // Todos pueden leer
      allow read: if true;
      // Solo admins pueden escribir
      allow write: if isAdmin();
    }

    // === PEDIDOS (ORDERS) ===
    match /orders/{orderId} {
      // El dueño del pedido puede leerlo, o el admin
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Solo usuarios autenticados pueden crear pedidos
      allow create: if isAuthenticated();
      // Solo admins pueden actualizar/eliminar pedidos
      allow update, delete: if isAdmin();
    }

    // === RESEÑAS (REVIEWS) ===
    match /reviews/{reviewId} {
      // Todos pueden leer reseñas
      allow read: if true;
      // Solo usuarios autenticados pueden crear reseñas
      allow create: if isAuthenticated();
      // Solo el dueño o admin pueden actualizar/eliminar
      allow update, delete: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // === WALLET TRANSACTIONS ===
    match /wallet_transactions/{transactionId} {
      // Solo el dueño de la transacción o admin pueden leerla
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Solo admins pueden crear transacciones
      allow create: if isAdmin();
      // No se pueden actualizar ni eliminar transacciones
      allow update, delete: if false;
    }

    // === CUPONES (COUPONS) ===
    match /coupons/{couponId} {
      // Todos pueden leer cupones activos
      allow read: if true;
      // Solo admins pueden crear/actualizar/eliminar cupones
      allow write: if isAdmin();
    }

    // === USO DE CUPONES (COUPON_USAGE) ===
    match /coupon_usage/{usageId} {
      // Solo el dueño o admin pueden leer
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Solo usuarios autenticados pueden crear registros de uso
      allow create: if isAuthenticated();
      // Solo admins pueden actualizar/eliminar
      allow update, delete: if isAdmin();
    }

    // === USUARIOS (si tienes una colección de users) ===
    match /users/{userId} {
      // El usuario puede leer su propia información, o el admin
      allow read: if isAuthenticated() && (userId == request.auth.uid || isAdmin());
      // El usuario puede actualizar su propia información
      allow update: if isAuthenticated() && userId == request.auth.uid;
      // Solo admins pueden crear/eliminar usuarios
      allow create, delete: if isAdmin();
    }

    // === CARRITOS ABANDONADOS (para futura funcionalidad) ===
    match /abandoned_carts/{cartId} {
      // Solo el dueño o admin pueden leer
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAdmin());
      // Usuarios autenticados pueden crear/actualizar su carrito
      allow create, update: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Solo admins pueden eliminar
      allow delete: if isAdmin();
    }

    // Denegar todo lo demás por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
